{"ast":null,"code":"var _jsxFileName = \"/Users/avinashpathrol/Downloads/Silvacom/Travel Reservation/client/src/components/CitySelector.js\",\n  _s = $RefreshSig$();\n// src/components/CitySelector.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CitySelector({\n  onCitySelect\n}) {\n  _s();\n  const [cities, setCities] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/api/cities') // Make sure the URL matches your server\n    .then(response => response.json()).then(setCities).catch(console.error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    onChange: e => onCitySelect(e.target.value),\n    children: cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: city.name,\n      children: city.label\n    }, city.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(CitySelector, \"DiWQVw0ar2n3PLd56i1Tx+k2gPg=\");\n_c = CitySelector;\nexport default CitySelector;\nvar _c;\n$RefreshReg$(_c, \"CitySelector\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CitySelector","onCitySelect","_s","cities","setCities","fetch","then","response","json","catch","console","error","onChange","e","target","value","children","map","city","name","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/avinashpathrol/Downloads/Silvacom/Travel Reservation/client/src/components/CitySelector.js"],"sourcesContent":["// src/components/CitySelector.js\nimport React, { useState, useEffect } from 'react';\n\nfunction CitySelector({ onCitySelect }) {\n  const [cities, setCities] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:3001/api/cities') // Make sure the URL matches your server\n      .then(response => response.json())\n      .then(setCities)\n      .catch(console.error);\n  }, []);\n\n  return (\n    <select onChange={(e) => onCitySelect(e.target.value)}>\n      {cities.map((city) => (\n        <option key={city.name} value={city.name}>{city.label}</option>\n      ))}\n    </select>\n  );\n}\n\nexport default CitySelector;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,YAAYA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,kCAAkC,CAAC,CAAC;IAAA,CACvCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACF,SAAS,CAAC,CACfK,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAQa,QAAQ,EAAGC,CAAC,IAAKZ,YAAY,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;IAAAC,QAAA,EACnDb,MAAM,CAACc,GAAG,CAAEC,IAAI,iBACfnB,OAAA;MAAwBgB,KAAK,EAAEG,IAAI,CAACC,IAAK;MAAAH,QAAA,EAAEE,IAAI,CAACE;IAAK,GAAxCF,IAAI,CAACC,IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAwC,CAC/D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb;AAACtB,EAAA,CAjBQF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAmBrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}