{"ast":null,"code":"var _jsxFileName = \"/Users/avinashpathrol/Downloads/Silvacom/Travel Reservation/client/src/components/WeatherDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherDetails({\n  city\n}) {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n\n  // Fetch weather directly using the city name\n  useEffect(() => {\n    const fetchWeather = async () => {\n      if (!city || !city.label) return;\n      try {\n        const weatherResponse = await fetch(`http://localhost:3001/weather/${encodeURIComponent(city.label)}`);\n        const weatherData = await weatherResponse.json();\n        if (!weatherResponse.ok) throw new Error(weatherData.message || 'Failed to fetch weather data');\n        setWeather(weatherData);\n      } catch (error) {\n        console.error('Weather fetching error:', error);\n        setError('Failed to load weather data');\n      }\n    };\n    fetchWeather();\n  }, [city]);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 21\n  }, this);\n\n  // Assuming the weather data structure matches your API's response\n  if (!weather || !weather.current || !weather.current.condition) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Weather in \", city.label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: weather.current.condition.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https:${weather.current.condition.icon}`,\n      alt: \"Weather icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperature: \", weather.current.temp_c, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherDetails, \"KCkQheFxQrPX5eajujaAYiYqU1o=\");\n_c = WeatherDetails;\nexport default WeatherDetails;\nvar _c;\n$RefreshReg$(_c, \"WeatherDetails\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherDetails","city","_s","weather","setWeather","error","setError","fetchWeather","label","weatherResponse","fetch","encodeURIComponent","weatherData","json","ok","Error","message","console","children","fileName","_jsxFileName","lineNumber","columnNumber","current","condition","text","src","icon","alt","temp_c","_c","$RefreshReg$"],"sources":["/Users/avinashpathrol/Downloads/Silvacom/Travel Reservation/client/src/components/WeatherDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction WeatherDetails({ city }) {\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n\n  // Fetch weather directly using the city name\n  useEffect(() => {\n    const fetchWeather = async () => {\n      if (!city || !city.label) return;\n\n      try {\n        const weatherResponse = await fetch(`http://localhost:3001/weather/${encodeURIComponent(city.label)}`);\n        const weatherData = await weatherResponse.json();\n        if (!weatherResponse.ok) throw new Error(weatherData.message || 'Failed to fetch weather data');\n        setWeather(weatherData);\n      } catch (error) {\n        console.error('Weather fetching error:', error);\n        setError('Failed to load weather data');\n      }\n    };\n\n    fetchWeather();\n  }, [city]);\n\n  if (error) return <p>{error}</p>;\n\n  // Assuming the weather data structure matches your API's response\n  if (!weather || !weather.current || !weather.current.condition) {\n    return <p>Loading weather...</p>;\n  }\n\n  return (\n    <div>\n      <h3>Weather in {city.label}</h3>\n      <p>{weather.current.condition.text}</p>\n      {/* Ensure the weather icon URL is secure (https) and correct as per your API response */}\n      <img src={`https:${weather.current.condition.icon}`} alt=\"Weather icon\" />\n      <p>Temperature: {weather.current.temp_c}Â°C</p>\n      {/* Display more weather details as needed */}\n    </div>\n  );\n}\n\nexport default WeatherDetails;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI,CAACN,IAAI,IAAI,CAACA,IAAI,CAACO,KAAK,EAAE;MAE1B,IAAI;QACF,MAAMC,eAAe,GAAG,MAAMC,KAAK,CAAE,iCAAgCC,kBAAkB,CAACV,IAAI,CAACO,KAAK,CAAE,EAAC,CAAC;QACtG,MAAMI,WAAW,GAAG,MAAMH,eAAe,CAACI,IAAI,CAAC,CAAC;QAChD,IAAI,CAACJ,eAAe,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,WAAW,CAACI,OAAO,IAAI,8BAA8B,CAAC;QAC/FZ,UAAU,CAACQ,WAAW,CAAC;MACzB,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdY,OAAO,CAACZ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CC,QAAQ,CAAC,6BAA6B,CAAC;MACzC;IACF,CAAC;IAEDC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,IAAII,KAAK,EAAE,oBAAON,OAAA;IAAAmB,QAAA,EAAIb;EAAK;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;;EAEhC;EACA,IAAI,CAACnB,OAAO,IAAI,CAACA,OAAO,CAACoB,OAAO,IAAI,CAACpB,OAAO,CAACoB,OAAO,CAACC,SAAS,EAAE;IAC9D,oBAAOzB,OAAA;MAAAmB,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClC;EAEA,oBACEvB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,GAAI,aAAW,EAACjB,IAAI,CAACO,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChCvB,OAAA;MAAAmB,QAAA,EAAIf,OAAO,CAACoB,OAAO,CAACC,SAAS,CAACC;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEvCvB,OAAA;MAAK2B,GAAG,EAAG,SAAQvB,OAAO,CAACoB,OAAO,CAACC,SAAS,CAACG,IAAK,EAAE;MAACC,GAAG,EAAC;IAAc;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1EvB,OAAA;MAAAmB,QAAA,GAAG,eAAa,EAACf,OAAO,CAACoB,OAAO,CAACM,MAAM,EAAC,OAAE;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3C,CAAC;AAEV;AAACpB,EAAA,CAxCQF,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AA0CvB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}