{"ast":null,"code":"var _jsxFileName = \"/Users/avinashpathrol/Downloads/Silvacom/Travel Reservation/client/src/components/CitySelector.js\";\n// src/components/CitySelector.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CitySelector({\n  onCitySelect,\n  cities\n}) {\n  // handle the change event of the select element\n  const handleChange = event => {\n    // Assuming `cities` is an array of city objects\n    const selectedCity = cities.find(city => city.name === event.target.value);\n    onCitySelect(selectedCity); // Pass the whole city object\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    onChange: handleChange,\n    defaultValue: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      disabled: true,\n      children: \"Select a city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: city.name,\n      children: city.label\n    }, city.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n}\n_c = CitySelector;\nexport default CitySelector;\nvar _c;\n$RefreshReg$(_c, \"CitySelector\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CitySelector","onCitySelect","cities","handleChange","event","selectedCity","find","city","name","target","value","onChange","defaultValue","children","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","label","_c","$RefreshReg$"],"sources":["/Users/avinashpathrol/Downloads/Silvacom/Travel Reservation/client/src/components/CitySelector.js"],"sourcesContent":["// src/components/CitySelector.js\nimport React, { useState, useEffect } from 'react';\n\nfunction CitySelector({ onCitySelect, cities }) {\n    // handle the change event of the select element\n    const handleChange = (event) => {\n      // Assuming `cities` is an array of city objects\n      const selectedCity = cities.find(city => city.name === event.target.value);\n      onCitySelect(selectedCity); // Pass the whole city object\n    };\n  \n    return (\n      <select onChange={handleChange} defaultValue=\"\">\n        <option value=\"\" disabled>Select a city</option>\n        {cities.map((city) => (\n          <option key={city.name} value={city.name}>{city.label}</option>\n        ))}\n      </select>\n    );\n  }\n  \n\nexport default CitySelector;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,YAAYA,CAAC;EAAEC,YAAY;EAAEC;AAAO,CAAC,EAAE;EAC5C;EACA,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B;IACA,MAAMC,YAAY,GAAGH,MAAM,CAACI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKJ,KAAK,CAACK,MAAM,CAACC,KAAK,CAAC;IAC1ET,YAAY,CAACI,YAAY,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,oBACEN,OAAA;IAAQY,QAAQ,EAAER,YAAa;IAACS,YAAY,EAAC,EAAE;IAAAC,QAAA,gBAC7Cd,OAAA;MAAQW,KAAK,EAAC,EAAE;MAACI,QAAQ;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC/ChB,MAAM,CAACiB,GAAG,CAAEZ,IAAI,iBACfR,OAAA;MAAwBW,KAAK,EAAEH,IAAI,CAACC,IAAK;MAAAK,QAAA,EAAEN,IAAI,CAACa;IAAK,GAAxCb,IAAI,CAACC,IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAwC,CAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb;AAACG,EAAA,GAhBMrB,YAAY;AAmBrB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}