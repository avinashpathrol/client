{"ast":null,"code":"var _jsxFileName = \"/Users/avinashpathrol/Downloads/Silvacom/Travel Reservation/client/src/components/WeatherDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WeatherDetails({\n  city\n}) {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n\n  // Fetch current weather\n  useEffect(() => {\n    if (!city || !city.label) return;\n    const fetchWeather = async () => {\n      try {\n        const weatherResponse = await fetch(`http://localhost:3001/weather/${encodeURIComponent(city.label)}`);\n        const weatherData = await weatherResponse.json();\n        if (!weatherResponse.ok) throw new Error(weatherData.message || 'Failed to fetch weather data');\n        setWeather(weatherData);\n      } catch (error) {\n        console.error('Weather fetching error:', error);\n        setError('Failed to load weather data');\n      }\n    };\n    fetchWeather();\n  }, [city]);\n\n  // Fetch forecast weather\n  useEffect(() => {\n    if (!city || !city.label || !selectedDate) return;\n    const fetchForecast = async () => {\n      try {\n        const forecastResponse = await fetch(`http://localhost:3001/forecast/${encodeURIComponent(city.label)}?date=${selectedDate}`);\n        const forecastData = await forecastResponse.json();\n        if (!forecastResponse.ok) throw new Error(forecastData.message || 'Failed to fetch weather forecast');\n        setForecast(forecastData);\n      } catch (error) {\n        console.error('Forecast fetching error:', error);\n        setError('Failed to load weather forecast');\n      }\n    };\n    fetchForecast();\n  }, [city, selectedDate]);\n\n  // Convert Kelvin to Celsius\n  const kelvinToCelsius = kelvin => (kelvin - 273.15).toFixed(2);\n\n  // Handlers\n  const handleDateChange = e => {\n    setError(''); // Clear errors\n    setForecast(null); // Clear previous forecast\n    setSelectedDate(e.target.value);\n  };\n\n  // UI elements\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Weather in \", city.label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"datePicker\",\n        children: \"Select a date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"datePicker\",\n        type: \"date\",\n        value: selectedDate,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`,\n        alt: \"Weather icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", kelvinToCelsius(weather.main.temp), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), forecast && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Forecast for \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), forecast.map((fcast, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: fcast.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/img/wn/${fcast.weather[0].icon}.png`,\n          alt: \"Weather icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", kelvinToCelsius(fcast.main.temp), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), !weather && !forecast && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherDetails, \"Wz2ovLRgRQ3ECsRChf5eIJkgoHI=\");\n_c = WeatherDetails;\nexport default WeatherDetails;\nvar _c;\n$RefreshReg$(_c, \"WeatherDetails\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherDetails","city","_s","weather","setWeather","selectedDate","setSelectedDate","forecast","setForecast","error","setError","label","fetchWeather","weatherResponse","fetch","encodeURIComponent","weatherData","json","ok","Error","message","console","fetchForecast","forecastResponse","forecastData","kelvinToCelsius","kelvin","toFixed","handleDateChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","onChange","description","src","icon","alt","main","temp","map","fcast","index","_c","$RefreshReg$"],"sources":["/Users/avinashpathrol/Downloads/Silvacom/Travel Reservation/client/src/components/WeatherDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction WeatherDetails({ city }) {\n  const [weather, setWeather] = useState(null);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n\n  // Fetch current weather\n  useEffect(() => {\n    if (!city || !city.label) return;\n\n    const fetchWeather = async () => {\n      try {\n        const weatherResponse = await fetch(`http://localhost:3001/weather/${encodeURIComponent(city.label)}`);\n        const weatherData = await weatherResponse.json();\n        if (!weatherResponse.ok) throw new Error(weatherData.message || 'Failed to fetch weather data');\n        setWeather(weatherData);\n      } catch (error) {\n        console.error('Weather fetching error:', error);\n        setError('Failed to load weather data');\n      }\n    };\n\n    fetchWeather();\n  }, [city]);\n\n  // Fetch forecast weather\n  useEffect(() => {\n    if (!city || !city.label || !selectedDate) return;\n\n    const fetchForecast = async () => {\n      try {\n        const forecastResponse = await fetch(`http://localhost:3001/forecast/${encodeURIComponent(city.label)}?date=${selectedDate}`);\n        const forecastData = await forecastResponse.json();\n        if (!forecastResponse.ok) throw new Error(forecastData.message || 'Failed to fetch weather forecast');\n        setForecast(forecastData);\n      } catch (error) {\n        console.error('Forecast fetching error:', error);\n        setError('Failed to load weather forecast');\n      }\n    };\n\n    fetchForecast();\n  }, [city, selectedDate]);\n\n  // Convert Kelvin to Celsius\n  const kelvinToCelsius = (kelvin) => (kelvin - 273.15).toFixed(2);\n\n  // Handlers\n  const handleDateChange = (e) => {\n    setError(''); // Clear errors\n    setForecast(null); // Clear previous forecast\n    setSelectedDate(e.target.value);\n  };\n\n  // UI elements\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div>\n      <h3>Weather in {city.label}</h3>\n      <div>\n        <label htmlFor=\"datePicker\">Select a date:</label>\n        <input\n          id=\"datePicker\"\n          type=\"date\"\n          value={selectedDate}\n          onChange={handleDateChange}\n        />\n      </div>\n\n      {weather && (\n        <>\n          <p>{weather.weather[0].description}</p>\n          <img src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`} alt=\"Weather icon\" />\n          <p>Temperature: {kelvinToCelsius(weather.main.temp)}°C</p>\n        </>\n      )}\n\n      {forecast && (\n        <div>\n          <h4>Forecast for {selectedDate}</h4>\n          {/* Map over the forecast data to display it */}\n          {forecast.map((fcast, index) => (\n            <div key={index}>\n              <p>{fcast.weather[0].description}</p>\n              <img src={`http://openweathermap.org/img/wn/${fcast.weather[0].icon}.png`} alt=\"Weather icon\" />\n              <p>Temperature: {kelvinToCelsius(fcast.main.temp)}°C</p>\n              {/* Include other forecast details you want to display */}\n            </div>\n          ))}\n        </div>\n      )}\n\n      {!weather && !forecast && <p>Loading weather...</p>}\n    </div>\n  );\n}\n\nexport default WeatherDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}