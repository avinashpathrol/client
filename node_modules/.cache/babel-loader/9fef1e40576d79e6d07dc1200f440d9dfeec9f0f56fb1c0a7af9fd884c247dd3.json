{"ast":null,"code":"var _jsxFileName = \"/Users/avinashpathrol/Downloads/Silvacom/Travel Reservation/client/src/components/WeatherDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherDetails({\n  city\n}) {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchWeather = async () => {\n      if (!city || !city.label) return;\n      try {\n        const weatherResponse = await fetch(`https://frozen-sea-07084-acf2dc3cd045.herokuapp.com/weather/${encodeURIComponent(city.label)}`);\n        const weatherData = await weatherResponse.json();\n        if (!weatherResponse.ok) throw new Error(weatherData.message || 'Failed to fetch weather data');\n        setWeather(weatherData);\n      } catch (error) {\n        console.error('Weather fetching error:', error);\n        setError('Failed to load weather data');\n      }\n    };\n    fetchWeather();\n  }, [city]);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }, this);\n\n  // Update component to match your API's response structure\n  if (!weather || !weather.weather || weather.weather.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Assuming temperature is in Kelvin (common for many APIs), convert to Celsius\n  const tempCelsius = (weather.main.temp - 273.15).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Weather in \", city.label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: weather.weather[0].description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`,\n      alt: \"Weather icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperature: \", tempCelsius, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherDetails, \"KCkQheFxQrPX5eajujaAYiYqU1o=\");\n_c = WeatherDetails;\nexport default WeatherDetails;\nvar _c;\n$RefreshReg$(_c, \"WeatherDetails\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherDetails","city","_s","weather","setWeather","error","setError","fetchWeather","label","weatherResponse","fetch","encodeURIComponent","weatherData","json","ok","Error","message","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","tempCelsius","main","temp","toFixed","description","src","icon","alt","_c","$RefreshReg$"],"sources":["/Users/avinashpathrol/Downloads/Silvacom/Travel Reservation/client/src/components/WeatherDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction WeatherDetails({ city }) {\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      if (!city || !city.label) return;\n\n      try {\n        const weatherResponse = await fetch(`https://frozen-sea-07084-acf2dc3cd045.herokuapp.com/weather/${encodeURIComponent(city.label)}`);\n        const weatherData = await weatherResponse.json();\n        if (!weatherResponse.ok) throw new Error(weatherData.message || 'Failed to fetch weather data');\n        setWeather(weatherData);\n      } catch (error) {\n        console.error('Weather fetching error:', error);\n        setError('Failed to load weather data');\n      }\n    };\n\n    fetchWeather();\n  }, [city]);\n\n  if (error) return <p>{error}</p>;\n\n  // Update component to match your API's response structure\n  if (!weather || !weather.weather || weather.weather.length === 0) {\n    return <p>Loading weather...</p>;\n  }\n\n  // Assuming temperature is in Kelvin (common for many APIs), convert to Celsius\n  const tempCelsius = (weather.main.temp - 273.15).toFixed(2);\n\n  return (\n    <div>\n      <h3>Weather in {city.label}</h3>\n      <p>{weather.weather[0].description}</p>\n      <img src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`} alt=\"Weather icon\" />\n      <p>Temperature: {tempCelsius}Â°C</p>\n      {/* Display more weather details as needed */}\n    </div>\n  );\n}\n\nexport default WeatherDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}