{"ast":null,"code":"var _jsxFileName = \"/Users/avinashpathrol/Downloads/Silvacom/Travel Reservation/client/src/components/WeatherDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherDetails({\n  city\n}) {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (city && city.lat && city.lon) {\n      fetch(`http://localhost:3001/weather?lat=${city.lat}&lon=${city.lon}`).then(response => response.json()).then(data => {\n        setWeather(data);\n      }).catch(error => {\n        console.error(error);\n        setError('Failed to load weather data');\n      });\n    }\n  }, [city]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Ensure weather data is loaded before trying to access it\n  if (!weather || !weather.current || !weather.current.condition) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Weather in \", city.label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: weather.current.condition.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: weather.current.condition.icon,\n      alt: \"Weather icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperature: \", weather.current.temp_c, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherDetails, \"dducRVO0pCJQnxjTimDps8bxXd8=\");\n_c = WeatherDetails;\nexport default WeatherDetails;\nvar _c;\n$RefreshReg$(_c, \"WeatherDetails\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherDetails","city","_s","weather","setWeather","error","setError","lat","lon","fetch","then","response","json","data","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","current","condition","label","text","src","icon","alt","temp_c","_c","$RefreshReg$"],"sources":["/Users/avinashpathrol/Downloads/Silvacom/Travel Reservation/client/src/components/WeatherDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction WeatherDetails({ city }) {\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (city && city.lat && city.lon) {\n      fetch(`http://localhost:3001/weather?lat=${city.lat}&lon=${city.lon}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setWeather(data);\n        })\n        .catch((error) => {\n          console.error(error);\n          setError('Failed to load weather data');\n        });\n    }\n  }, [city]);\n  \n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  // Ensure weather data is loaded before trying to access it\n  if (!weather || !weather.current || !weather.current.condition) {\n    return <p>Loading weather...</p>;\n  }\n\n  return (\n    <div>\n      <h3>Weather in {city.label}</h3>\n      <p>{weather.current.condition.text}</p>\n      <img src={weather.current.condition.icon} alt=\"Weather icon\" />\n      <p>Temperature: {weather.current.temp_c}Â°C</p>\n      {/* Display more weather details as needed */}\n    </div>\n  );\n}\n\nexport default WeatherDetails;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,IAAII,IAAI,IAAIA,IAAI,CAACM,GAAG,IAAIN,IAAI,CAACO,GAAG,EAAE;MAChCC,KAAK,CAAE,qCAAoCR,IAAI,CAACM,GAAI,QAAON,IAAI,CAACO,GAAI,EAAC,CAAC,CACnEE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACdT,UAAU,CAACS,IAAI,CAAC;MAClB,CAAC,CAAC,CACDC,KAAK,CAAET,KAAK,IAAK;QAChBU,OAAO,CAACV,KAAK,CAACA,KAAK,CAAC;QACpBC,QAAQ,CAAC,6BAA6B,CAAC;MACzC,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAGV,IAAII,KAAK,EAAE;IACT,oBAAON,OAAA;MAAAiB,QAAA,EAAIX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACvB;;EAEA;EACA,IAAI,CAACjB,OAAO,IAAI,CAACA,OAAO,CAACkB,OAAO,IAAI,CAAClB,OAAO,CAACkB,OAAO,CAACC,SAAS,EAAE;IAC9D,oBAAOvB,OAAA;MAAAiB,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClC;EAEA,oBACErB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,GAAI,aAAW,EAACf,IAAI,CAACsB,KAAK;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChCrB,OAAA;MAAAiB,QAAA,EAAIb,OAAO,CAACkB,OAAO,CAACC,SAAS,CAACE;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCrB,OAAA;MAAK0B,GAAG,EAAEtB,OAAO,CAACkB,OAAO,CAACC,SAAS,CAACI,IAAK;MAACC,GAAG,EAAC;IAAc;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/DrB,OAAA;MAAAiB,QAAA,GAAG,eAAa,EAACb,OAAO,CAACkB,OAAO,CAACO,MAAM,EAAC,OAAE;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3C,CAAC;AAEV;AAAClB,EAAA,CArCQF,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAuCvB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}