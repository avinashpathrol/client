{"ast":null,"code":"var _jsxFileName = \"/Users/avinashpathrol/Downloads/Silvacom/Travel Reservation/client/src/components/WeatherDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WeatherDetails({\n  city\n}) {\n  _s();\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecastWeather, setForecastWeather] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchWeatherAndForecast = async () => {\n      if (!city || !city.label) return;\n      try {\n        // Fetch current weather\n        const weatherResponse = await fetch(`http://localhost:3001/weather/${encodeURIComponent(city.label)}`);\n        const weatherData = await weatherResponse.json();\n        if (!weatherResponse.ok) throw new Error(weatherData.message || 'Failed to fetch current weather data');\n        setCurrentWeather(weatherData);\n\n        // Fetch weather forecast\n        const forecastResponse = await fetch(`http://localhost:3001/forecast/${encodeURIComponent(city.label)}`);\n        const forecastData = await forecastResponse.json();\n        if (!forecastResponse.ok) throw new Error(forecastData.message || 'Failed to fetch weather forecast');\n        setForecastWeather(forecastData);\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n        setError('Failed to load weather data');\n      }\n    };\n    fetchWeatherAndForecast();\n  }, [city]);\n  const kelvinToCelsius = kelvin => (kelvin - 273.15).toFixed(2);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Weather in \", city.label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), currentWeather && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentWeather.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://openweathermap.org/img/wn/${currentWeather.weather[0].icon}.png`,\n        alt: \"Weather icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", kelvinToCelsius(currentWeather.main.temp), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), forecastWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"3-Day Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), forecastWeather.list.slice(0, 24 * 3 / forecastWeather.list[0].dt).map((forecast, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [new Date(forecast.dt * 1000).toLocaleDateString(), \" - \", forecast.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/img/wn/${forecast.weather[0].icon}.png`,\n          alt: \"Weather icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", kelvinToCelsius(forecast.main.temp), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), !currentWeather && !forecastWeather && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 47\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherDetails, \"ECFK5UftBPRlwa64NycofesDK4I=\");\n_c = WeatherDetails;\nexport default WeatherDetails;\nvar _c;\n$RefreshReg$(_c, \"WeatherDetails\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherDetails","city","_s","currentWeather","setCurrentWeather","forecastWeather","setForecastWeather","error","setError","fetchWeatherAndForecast","label","weatherResponse","fetch","encodeURIComponent","weatherData","json","ok","Error","message","forecastResponse","forecastData","console","kelvinToCelsius","kelvin","toFixed","children","fileName","_jsxFileName","lineNumber","columnNumber","weather","description","src","icon","alt","main","temp","list","slice","dt","map","forecast","index","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/avinashpathrol/Downloads/Silvacom/Travel Reservation/client/src/components/WeatherDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction WeatherDetails({ city }) {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecastWeather, setForecastWeather] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchWeatherAndForecast = async () => {\n      if (!city || !city.label) return;\n\n      try {\n        // Fetch current weather\n        const weatherResponse = await fetch(`http://localhost:3001/weather/${encodeURIComponent(city.label)}`);\n        const weatherData = await weatherResponse.json();\n        if (!weatherResponse.ok) throw new Error(weatherData.message || 'Failed to fetch current weather data');\n        setCurrentWeather(weatherData);\n\n        // Fetch weather forecast\n        const forecastResponse = await fetch(`http://localhost:3001/forecast/${encodeURIComponent(city.label)}`);\n        const forecastData = await forecastResponse.json();\n        if (!forecastResponse.ok) throw new Error(forecastData.message || 'Failed to fetch weather forecast');\n        setForecastWeather(forecastData);\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n        setError('Failed to load weather data');\n      }\n    };\n\n    fetchWeatherAndForecast();\n  }, [city]);\n\n  const kelvinToCelsius = (kelvin) => (kelvin - 273.15).toFixed(2);\n\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div>\n      <h3>Weather in {city.label}</h3>\n      {currentWeather && (\n        <>\n          <p>{currentWeather.weather[0].description}</p>\n          <img src={`http://openweathermap.org/img/wn/${currentWeather.weather[0].icon}.png`} alt=\"Weather icon\" />\n          <p>Temperature: {kelvinToCelsius(currentWeather.main.temp)}°C</p>\n        </>\n      )}\n      \n      {forecastWeather && (\n        <div>\n          <h4>3-Day Forecast</h4>\n          {forecastWeather.list.slice(0, 24 * 3 / forecastWeather.list[0].dt).map((forecast, index) => (\n            <div key={index}>\n              <p>{new Date(forecast.dt * 1000).toLocaleDateString()} - {forecast.weather[0].description}</p>\n              <img src={`http://openweathermap.org/img/wn/${forecast.weather[0].icon}.png`} alt=\"Weather icon\" />\n              <p>Temperature: {kelvinToCelsius(forecast.main.temp)}°C</p>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {!currentWeather && !forecastWeather && <p>Loading weather...</p>}\n    </div>\n  );\n}\n\nexport default WeatherDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}